{"version":3,"sources":["webpack://vip-site-pratice-1/./src/components/Totast/totast.tsx","webpack://vip-site-pratice-1/./src/pages/Login/Login.tsx","webpack://vip-site-pratice-1/./src/components/Totast/totast.css?1dd3","webpack://vip-site-pratice-1/./src/pages/Login/login.css?b857"],"names":["Totast","visible","msg","useState","isShow","setIsShow","useEffect","timer","setTimeout","clearTimeout","React","Login","history","useHistory","location","useLocation","isClearPending","useRef","redirectUrl","state","from","pathname","qr","setQr","scanRes","setScanRes","qrCount","setQrCount","uuid","setUuid","codeCount","setCodeCount","useRecoilState","loginState","loginInfo","setLoginInfo","_componentStatus","isError","setIsError","current","code","user","then","res","status","loginIn","data","err","title","content","window","preState","clearPending","userInfo","storage","push","Loading","svg","width","height","__html","require"],"mappings":"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","file":"scripts/src_pages_Login_Login_tsx.bundle.js","sourcesContent":["import React, { FC, ReactNode, useState, useEffect } from \"react\";\nimport \"./totast.css\";\ntype ITotast = {\n  children?: ReactNode;\n  visible: Boolean;\n  msg?: string;\n};\n\nconst Totast: FC<ITotast> = ({ visible = false, msg = \"服务开小差了\" }) => {\n  const [isShow, setIsShow] = useState(true);\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      setIsShow(false);\n    }, 3000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n  return (\n    <>\n      {visible && isShow ? (\n        <div className=\"modal\">\n          <div className=\"tip-msg\">{msg}</div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default React.memo(Totast);\n","import React, { FC, useEffect, useState, useRef, Suspense } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\nimport { loginState } from \"@recoil/atoms/loginAtoms\";\nimport { LoginInfo } from \"@models/loginInfo\";\nimport { user } from \"@api/index\";\nimport Loading from \"@components/Loading/Loading\";\nimport { clearPending, storage } from \"@utils/index\";\nimport { QRLine } from \"react-qrbtf\";\nimport \"./login.css\";\nimport Totast from \"@components/Totast/totast\";\n\nconst Login: FC<{}> = () => {\n  // console.log(\"登录页面\");\n  let history = useHistory();\n  let location = useLocation();\n\n  // 定义的一个变量\n  const isClearPending = useRef(true);\n\n //   记录跳转之前的地址\n  let redirectUrl = location.state\n    ? (location.state as any).from && (location.state as any).from.pathname\n    : \"/\";\n\n  const [qr, setQr] = useState(\"\");\n\n  const [scanRes, setScanRes] = useState<{\n    msg: string;\n    content?: string;\n    code?: string;\n  }>({ msg: \"扫码登录<br/>京程一灯FE社区\" });\n\n  // 这里是为了进行接口的重复请求\n  const [qrCount, setQrCount] = useState(0);\n\n\n  const [uuid, setUuid] = useState(\"\");\n  const [codeCount, setCodeCount] = useState(0);\n\n  const [loginInfo, setLoginInfo] = useRecoilState(loginState);\n\n  let _componentStatus = useRef(true);\n  const [isError, setIsError] = useState(false);\n\n  // 判断当前页面是否已经销毁，跳走\n  useEffect(() => {\n    return () => {\n      _componentStatus.current = false;\n    };\n  }, []);\n\n  //  获取用户信息，判断是否是vip用户\n  useEffect(() => {\n    const { code } = scanRes;\n    if (!code) return;\n    user\n      .getUserInfo({ code })\n      .then((res) => {\n        if (!_componentStatus.current) {\n          _componentStatus = null;\n          return;\n        }\n        if (res.status === -5) {\n          setScanRes({\n            msg: \"只限VIP认证用户访问\",\n          });\n          return;\n        }\n        loginIn(res.data);\n      })\n      .catch((err) => {\n        if (!_componentStatus.current) {\n          _componentStatus = null;\n          return;\n        }\n        setIsError(true);\n      });\n  }, [scanRes.code]);\n\n  // 获取二维码\n  useEffect(() => {\n    user\n      .getQR()\n      .then((res) => {\n        if (!_componentStatus.current) {\n          _componentStatus = null;\n          return;\n        }\n        const { qr, uuid } = res.data;\n        setQr(qr);\n        setUuid(uuid);\n      })\n      .catch((err) => {\n        if (!_componentStatus.current) {\n          _componentStatus = null;\n          return;\n        }\n        setIsError(true);\n      });\n  }, [qrCount]);\n\n  // 获取code 是否扫码登录\n  useEffect(() => {\n    let timer: number = null;\n    if (!uuid) return;\n    user\n      .getCode({ uuid })\n      .then((res: any) => {\n        if (!_componentStatus.current) {\n          _componentStatus = null;\n          return;\n        }\n        if (res.status === 405) {\n          const { code } = res.data;\n          // 表示登录成功\n          setScanRes({\n            msg: res.msg,\n            code: code,\n          });\n          isClearPending.current = false;\n        } else if (res.status === 404) {\n          if (scanRes.msg !== \"扫描成功\") {\n            setScanRes({\n              msg: res.msg.title,\n              content: res.msg.content,\n            });\n          }\n          timer = window.setTimeout(() => {\n            setCodeCount((preState) => {\n              return ++preState;\n            });\n          }, 1000);\n        } else if (res.status === 403) {\n          setScanRes({\n            msg: res.msg.title,\n            content: res.msg.content,\n          });\n          timer = window.setTimeout(() => {\n            setCodeCount((preState) => {\n              return ++preState;\n            });\n          }, 1000);\n        } else if (res.status === 500) {\n          setQrCount((preState) => ++preState);\n        } else {\n          timer = window.setTimeout(() => {\n            setCodeCount((preState) => {\n              return ++preState;\n            });\n          }, 1000);\n        }\n      })\n      .catch((err) => {\n        if (!_componentStatus.current) {\n          _componentStatus = null;\n          return;\n        }\n        if (err !== -3) {\n          setQrCount((preState) => ++preState);\n        }\n      });\n    return () => {\n      clearTimeout(timer);\n      if (isClearPending.current) {\n        clearPending();\n      }\n    };\n  }, [uuid, codeCount]);\n\n  const loginIn = (userInfo: LoginInfo) => {\n    setLoginInfo(userInfo);\n    if (redirectUrl === \"/login\") {\n      redirectUrl = \"/\";\n    }\n    storage.set(\"userInfo\", userInfo);\n    history.push(redirectUrl);\n  };\n\n  return (\n    <>\n      <Suspense fallback={Loading}>\n        <div className=\"page-login layout-container\">\n          <div className=\"scan-box-con\">\n            {/* <div className=\"scan-box-clip\"> */}\n            {/* <div className=\"scan-box-bg\"></div> */}\n            <div className=\"scan-box\">\n              {qr ? (\n                <>\n                  {/* <img className=\"scan-img\" src={qr} alt=\"\" /> */}\n                  <QRLine\n                    value={qr}\n                    className=\"my-qrcode\"\n                    styles={{ svg: { width: \"260px\", height: \"260px\" } }}\n                    // type=\"planet\"\n                    // size={50}\n                    // opacity={100}\n                    level=\"M\"\n                    lineWidth={70}\n                    posType=\"rect\"\n                    direction=\"cross\"\n                    lineColor=\"#fefefe\"\n                    posColor=\"#fefefe\"\n                    // posColor=\"##a52ff7\"\n                    // title={scanRes.msg}\n                  />\n                  {/* <div className=\"login-tip-til\">{scanRes.msg}</div>\n                  <div className=\"login-tip-content\">{scanRes.content}</div> */}\n                </>\n              ) : (\n                <Loading />\n              )}\n            </div>\n            {/* </div> */}\n\n            <div className=\"tip-txt\">\n              <div\n                className=\"login-tip-til\"\n                dangerouslySetInnerHTML={{ __html: scanRes.msg }}\n              ></div>\n              <div className=\"login-tip-content\">{scanRes.content}</div>\n            </div>\n            <img\n              className=\"qrbg\"\n              src={require(\"@assets/images/qrbg2.png\")}\n              alt=\"\"\n            />\n          </div>\n\n          {/* <div className=\"message\">\n          All your dreams can come true. <br />\n          If you have the courage to pursue them.\n        </div> */}\n          {/* <ParticlesBg  num={100} type=\"lines\" bg={true} /> */}\n        </div>\n      </Suspense>\n      <Totast visible={isError}></Totast>\n    </>\n  );\n};\nexport default Login;\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};"],"sourceRoot":""}
{"version":3,"sources":["webpack://vip-site-pratice-1/./src/models/ques.ts","webpack://vip-site-pratice-1/./src/pages/QuesInfo/quesInfo.tsx","webpack://vip-site-pratice-1/./src/recoil/atoms/quesAtoms.ts","webpack://vip-site-pratice-1/./src/recoil/selectors/quesListSelectors.ts","webpack://vip-site-pratice-1/./src/pages/QuesInfo/quesInfo.css?3fe7"],"names":["initQuesListParams","uid","condition","biz_type","page","page_count","initQuesParams","curNav","curQuesIndex","totalPage","quesList","InterviewExperInfo","history","useHistory","location","useLocation","qid","state","storage","replace","useRecoilValue","loginSel","useState","md","setMd","loading","setLoading","useLoginCheck","setLoginStatus","useRecoilState","quesListSelect","quesListParam","setQuesListParam","quesListParams","useRef","current","quesSelect","quesParam","setQuesParam","quesParams","_componentStatus","isError","setIsError","noNextQues","setNoNextQues","useEffect","ques","then","res","status","quesInfo","data","md_str","setFont","key","err","goBack","useCallback","push","getQuesInfo","pathname","curQid","getQid","index","params","quesL","length","quesListNew","list","console","log","goNextQues","checkNoNextQues","goPrevQues","Loading","quesListState","atom","quesState","selector","get","error","set","newVal"],"mappings":"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","file":"scripts/src_pages_QuesInfo_quesInfo_tsx.bundle.js","sourcesContent":["export interface QuesListParams {\n  uid: number;\n  condition: {\n    biz_type: number;\n    tech_tag?: string[];\n  };\n  page: number;\n  page_count: number;\n}\n\nexport interface QuesParams {\n  curNav: number;\n  curQuesIndex: number;\n  curQid?: number;\n  totalPage: number;\n  quesList: any[];\n}\n\nexport const initQuesListParams = (): QuesListParams => ({\n  uid: 0,\n  condition: {\n    biz_type: 2,\n  },\n  page: 1,\n  page_count: 15,\n});\nexport const initQuesParams = (): QuesParams => ({\n  curNav: 1,\n  curQuesIndex: -1,\n  totalPage: 1,\n  quesList: [],\n});\n","import React, {\n    FC,\n    useEffect,\n    useState,\n    useCallback,\n    useRef,\n    Suspense,\n  } from \"react\";\n  import \"./quesInfo.css\";\n  import MarkRender from \"@components/MarkRender/markRender\";\n  import { useHistory, useLocation } from \"react-router-dom\";\n  import { ques } from \"@api/index\";\n  import Loading from \"@components/Loading/Loading\";\n  // 字体加密\n  import { setFont } from \"@utils/index\";\n  import { useLoginCheck } from \"@hooks/index\";\n  import { loginSel } from \"@recoil/selectors/loginSelectors\";\n  import Totast from \"@components/Totast/totast\";\n  import {\n    quesListSelect,\n    quesSelect,\n  } from \"@recoil/selectors/quesListSelectors\";\n  import { useRecoilState, useRecoilValue } from \"recoil\";\n  import { storage } from \"../../utils/localStorage/index\";\n  \n  const InterviewExperInfo: FC<{}> = () => {\n    // console.log(\"面试题详情\");\n    let history = useHistory();\n    const location = useLocation<{ qid: number }>();\n    let qid = 0;\n    if (!location.state) {\n      qid = storage.get(\"qid\");\n      if (!qid) {\n        history.replace(\"/ques\");\n        return <></>;\n      }\n    } else {\n      qid = location.state.qid;\n      storage.set(\"qid\", qid);\n    }\n    const { uid } = useRecoilValue(loginSel);\n    const [md, setMd] = useState(\"\");\n\n    const [loading, setLoading] = useState(true);\n    const { setLoginStatus } = useLoginCheck();\n\n    const [quesListParam, setQuesListParam] = useRecoilState(quesListSelect);\n\n    const quesListParams = useRef(quesListParam);\n    quesListParams.current = quesListParam;\n    const [quesParam, setQuesParam] = useRecoilState(quesSelect);\n    const quesParams = useRef(quesParam);\n    quesParams.current = quesParam;\n\n    let _componentStatus = useRef(true);\n    const [isError, setIsError] = useState(false);\n    const [noNextQues,setNoNextQues] = useState(false);\n    useEffect(() => {\n      return () => {\n        _componentStatus.current = false;\n        // setQuesParam({\n        //   ...quesParams.current,\n        //   quesList: [],\n        // });\n      };\n    }, []);\n    useEffect(() => {\n      ques\n        .getQuesInfo({\n          qid,\n          uid,\n        })\n        .then((res) => {\n          if (!_componentStatus.current) {\n            _componentStatus = null;\n            return;\n          }\n          setLoginStatus(res.status);\n          const quesInfo = res.data.md_str;\n          setMd(quesInfo);\n          setFont(res.data.key, \"getInfo\", setLoading);\n          setQuesListParam({\n            ...quesListParams.current,\n          });\n        })\n        .catch((err) => {\n          setLoading(false);\n          setIsError(true);\n        });\n    }, []);\n  \n    const goBack = useCallback(() => {\n      history.push(\"/ques\");\n    }, []);\n    const getQuesInfo = useCallback((qid: number) => {\n      ques\n        .getQuesInfo({\n          qid: qid,\n          uid,\n        })\n        .then((res) => {\n          if (!_componentStatus.current) {\n            _componentStatus = null;\n            return;\n          }\n          setLoginStatus(res.status);\n          const quesInfo = res.data.md_str;\n          history.push({ pathname: location.pathname, state: { qid } });\n          setMd(quesInfo);\n          setFont(res.data.key, \"getInfo\", setLoading);\n          setLoading(true);\n          setQuesParam({\n            ...quesParams.current,\n            curQid: qid,\n          });\n        })\n        .catch((err) => {\n          setLoading(false);\n          setIsError(true);\n        });\n    }, []);\n    const getQid = useCallback((index: number) => {\n      const { quesList } = quesParams.current;\n      const params = quesListParams.current;\n      const quesL = quesList.length;\n      if (quesL <= 0) {\n        return;\n      }\n      setLoading(true);\n      let { qid = -1 } = quesList[index] || {};\n      if (qid < 0) {\n        ques\n          .getQuesList({\n            ...params,\n            ...{ uid },\n            page: params.page + 1,\n          })\n          .then((res) => {\n            const quesListNew = [...quesList, ...res.data.list];\n            qid = quesListNew[index].qid;\n            // console.log(\"qid\", qid);\n            getQuesInfo(qid);\n            setQuesParam({\n              ...quesParams.current,\n              quesList: quesListNew,\n              curQid: qid,\n            });\n            setQuesListParam({\n              ...quesListParams.current,\n              ...{ uid },\n              page: params.page + 1,\n            });\n          })\n          .catch((err) => {\n            console.log(err);\n            setIsError(true);\n          });\n      } else {\n        getQuesInfo(qid);\n      }\n    }, []);\n    const goNextQues = useCallback(() => {\n      let { curQuesIndex, totalPage, quesList } = quesParams.current;\n      let { page, page_count } = quesListParams.current;\n      const checkNoNextQues =\n        page * page_count === totalPage && curQuesIndex >= quesList.length-1;\n        setNoNextQues(checkNoNextQues);\n      if (checkNoNextQues) {\n        return;\n      }\n      curQuesIndex++;\n      setQuesParam({\n        ...quesParams.current,\n        curQuesIndex,\n      });\n      getQid(curQuesIndex);\n    }, []);\n    const goPrevQues = useCallback(() => {\n      let { curQuesIndex, quesList } = quesParams.current;\n      curQuesIndex--;\n      if (curQuesIndex < 0 || quesList.length <= 0) {\n        return;\n      }\n      setNoNextQues(false);\n      setQuesParam({\n        ...quesParams.current,\n        curQuesIndex,\n      });\n      getQid(curQuesIndex);\n    }, []);\n    return (\n      <>\n        <Suspense fallback={Loading}>\n          <div className=\"ques-info layout-container\">\n            {true ? (\n              <div className=\"btn-box\">\n                <div className=\"btn-back\" onClick={goBack}>\n                  <i className=\"iconfont\">&#xe653;</i>\n                </div>\n                {quesParam.quesList.length <= 0 ? null : (\n                  <>\n                    <div\n                      className={`btn-prev ${\n                        quesParam.curQuesIndex <= 0 ||\n                        quesParam.quesList.length <= 0\n                          ? \"disable\"\n                          : \"\"\n                      }`}\n                      onClick={goPrevQues}\n                    >\n                      上一题\n                      {/* <i className=\"iconfont\">&#xe616;</i> */}\n                    </div>\n                    <div\n                      className={`btn-next ${\n                        noNextQues\n                          ? \"disable\"\n                          : \"\"\n                      }`}\n                      onClick={goNextQues}\n                    >\n                      下一题\n                      {/* <i className=\"iconfont\">&#xe617;</i> */}\n                    </div>\n                  </>\n                )}\n              </div>\n            ) : null}\n  \n            <MarkRender\n              mardownStr={md}\n              heightGap={66}\n              opaicty={!loading ? 1 : 0}\n            ></MarkRender>\n          </div>\n          {loading ? <Loading /> : null}\n        </Suspense>\n        <Totast visible={isError}></Totast>\n      </>\n    );\n  };\n  export default InterviewExperInfo;\n  ","import { atom } from \"recoil\";\nimport { initQuesListParams, initQuesParams } from \"@models/ques\";\n\nexport const quesListState = atom({\n  key: \"QuesListParams\",\n  default: initQuesListParams(),\n});\nexport const quesState = atom({\n  key: \"QuesParams\",\n  default: initQuesParams(),\n});\n","import { selector } from \"recoil\";\nimport { quesListState, quesState } from \"../atoms/quesAtoms\";\nimport {\n  initQuesListParams,\n  QuesListParams,\n  initQuesParams,\n  QuesParams,\n} from \"@models/ques\";\nimport { storage } from \"@utils/index\";\n\nexport const quesListSelect = selector({\n  key: \"quesListSel\",\n  get: ({ get }) => {\n    let quesListParam = get(quesListState);\n    if (quesListParam.uid === 0) {\n      try {\n        quesListParam = storage.get(\"quesListParam\") || quesListParam;\n      } catch (error) {\n        quesListParam = quesListParam;\n      }\n    }\n    return quesListParam;\n  },\n  set: ({ set }, newVal: QuesListParams) => {\n    set(quesListState, newVal);\n    storage.set(\"quesListParam\", newVal);\n  },\n});\nexport const quesSelect = selector({\n  key: \"quesSel\",\n  get: ({ get }) => {\n    let quesParam = get(quesState);\n    if (quesParam.curQuesIndex === -1) {\n      try {\n        quesParam = storage.get(\"quesParam\") || quesParam;\n      } catch (error) {\n        quesParam = quesParam;\n      }\n    }\n    return quesParam;\n  },\n  set: ({ set }, newVal: QuesParams) => {\n    set(quesState, newVal);\n    storage.set(\"quesParam\", newVal);\n  },\n});\n","// extracted by mini-css-extract-plugin\nexport {};"],"sourceRoot":""}
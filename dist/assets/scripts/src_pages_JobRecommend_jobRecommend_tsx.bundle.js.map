{"version":3,"sources":["webpack://vip-site-pratice-1/./src/components/Loading/loading.tsx","webpack://vip-site-pratice-1/./src/components/Totast/totast.tsx","webpack://vip-site-pratice-1/./src/hooks/index.tsx","webpack://vip-site-pratice-1/./src/hooks/useLoginCheck.tsx","webpack://vip-site-pratice-1/./src/hooks/useViewport.tsx","webpack://vip-site-pratice-1/./src/pages/JobRecommend/jobRecommend.tsx","webpack://vip-site-pratice-1/./src/recoil/atoms/job.ts","webpack://vip-site-pratice-1/./src/recoil/selectors/jobSelect.ts","webpack://vip-site-pratice-1/./src/components/Totast/totast.css?1dd3","webpack://vip-site-pratice-1/./src/pages/JobRecommend/jobRecommend.css?8b9b"],"names":["Loading","bgOpacity","Totast","visible","msg","useState","isShow","setIsShow","useEffect","timer","setTimeout","clearTimeout","React","loginCheck","history","useHistory","location","useLocation","loginStatus","setLoginStatus","useRecoilState","loginState","loginInfo","setLoginInfo","initLogin","storage","push","pathname","state","from","alert","useViewport","window","innerHeight","wh","setWH","innerWidth","ww","setWW","handleWindowResize","addEventListener","removeEventListener","JobRecommend","useRecoilValue","loginSel","uid","jobSelect","jobInfo","setJobInfo","dataLoading","setDataLoading","isError","setIsError","jobList","setJobList","useLoginCheck","_componentStatus","useRef","current","id","job","then","res","status","list","data","items","scrollToAnchor","err","handleGoInfo","jid","length","map","item","index","company_name","tags","join","salary","contact_way","place","jobState","atom","key","selector","get","error","set","newVal"],"mappings":"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","file":"scripts/src_pages_JobRecommend_jobRecommend_tsx.bundle.js","sourcesContent":["import \"./Loading.css\";\nimport React, { FC, ReactNode } from \"react\";\n\ntype props = {\n  children?: ReactNode;\n  bgOpacity?: Boolean;\n};\nconst Loading: FC<props> = ({ bgOpacity = true }) => {\n  return (\n    <>\n      <div\n        className={`components-loading ${\n          bgOpacity ? \"components-loading-opacity\" : \"\"\n        }`}\n      >\n      <div className=\"loading-con\">\n      <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n      </div>\n      </div>\n    </>\n  );\n};\n\nexport default Loading;","import React, { FC, ReactNode, useState, useEffect } from \"react\";\nimport \"./totast.css\";\ntype ITotast = {\n  children?: ReactNode;\n  visible: Boolean;\n  msg?: string;\n};\n\nconst Totast: FC<ITotast> = ({ visible = false, msg = \"服务开小差了\" }) => {\n  const [isShow, setIsShow] = useState(true);\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      setIsShow(false);\n    }, 3000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n  return (\n    <>\n      {visible && isShow ? (\n        <div className=\"modal\">\n          <div className=\"tip-msg\">{msg}</div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default React.memo(Totast);\n","import useViewport from './useViewport';\nimport useLoginCheck from './useLoginCheck';\nexport {\n    useViewport,\n    useLoginCheck\n}","import React from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useState, useEffect, Children } from \"react\";\nimport { storage } from \"@utils/index\";\nimport { useRecoilState } from \"recoil\";\nimport { loginState } from \"@recoil/atoms/loginAtoms\";\nimport { initLogin } from \"@models/loginInfo\";\n\nconst loginCheck = () => {\n  // console.log(\"useLoginCheck\");\n  const history = useHistory();\n  const location = useLocation();\n  \n  const [loginStatus, setLoginStatus] = useState(0);\n  const [loginInfo, setLoginInfo] = useRecoilState(loginState);\n  useEffect(() => {\n    if (loginStatus === 0) return;\n    if (loginStatus == -4 || loginStatus == -5) {\n      setLoginInfo(initLogin());\n      storage.remove(\"userInfo\");\n      history.push({\n        pathname: \"/login\",\n        state: {\n          from: {\n            pathname: location.pathname,\n          },\n        },\n      });\n    }else{\n      alert('服务开小差了');\n    }\n  }, [loginStatus]);\n  return { loginStatus, setLoginStatus };\n};\nexport default loginCheck;\n","import { useState, useEffect } from \"react\";\n// hooks是通过链表存储的\n\nconst useViewport = () => {\n  // 定义state 获取宽度、高度\n  const [wh, setWH] = useState<number>(window.innerHeight);\n  const [ww, setWW] = useState<number>(window.innerWidth);\n\n  // 相当于didMount\n  useEffect(() => {\n    const handleWindowResize = () => {\n      setWH(window.innerHeight);\n      setWW(window.innerWidth);\n    };\n    // 操作dom\n    window.addEventListener(\"resize\", handleWindowResize);\n    // return destroy 不使用的时候可以移除\n    return () => window.removeEventListener(\"resize\", handleWindowResize);\n  }, []);\n\n  return {ww, wh};\n};\nexport default useViewport;\n","import React, {\n  FC,\n  ReactElement,\n  useEffect,\n  useRef,\n  useState,\n  Suspense,\n} from \"react\";\nimport \"./jobRecommend.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { job } from \"@api/index\";\nimport { useLoginCheck } from \"@hooks/index\";\nimport Loading from \"@components/Loading/loading\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\nimport { loginSel } from \"@recoil/selectors/loginSelectors\";\nimport { jobSelect } from \"@recoil/selectors/jobSelect\";\nimport { scrollToAnchor } from \"@utils/index\";\nimport Totast from \"@components/Totast/totast\";\ntype IJobList = {\n  items: Array<{\n    company_name: string;\n    contact_way: string;\n    place: string;\n    salary: string;\n    tags: string[];\n    jid: number;\n  }>;\n  page: number;\n  pages: number;\n};\nimport { IJobListParams } from \"@api/job\";\nconst JobRecommend: FC<{}> = () => {\n  // console.log(\"工作推荐列表\");\n  // const [observer, setObserver] = useState<IntersectionObserver>(null);\n  // const [isLoading, setLoading] = useState(false);\n  const { uid } = useRecoilValue(loginSel);\n  const [jobInfo, setJobInfo] = useRecoilState(jobSelect);\n  const [dataLoading, setDataLoading] = useState(true);\n  const [isError,setIsError] = useState(false);\n  // const [hasData, setHasData] = useState(true);\n  // const $botEle = useRef<HTMLDivElement>(null);\n  const [jobList, setJobList] = useState<IJobList[\"items\"]>([]);\n  // const [jobListParams, setJobListParams] = useState<IJobListParams>({\n  //   uid: 4,\n  //   page: 1,\n  //   page_count: 30,\n  // });\n  // const jobListParamRef = useRef(jobListParams);\n  // jobListParamRef.current = jobListParams;\n  const { setLoginStatus } = useLoginCheck();\n  let _componentStatus = useRef(true);\n  useEffect(() => {\n    return () => {\n      _componentStatus.current = false;\n    };\n  }, []);\n  useEffect(() => {\n    // if (!isLoading) {\n    //   setDataLoading(true);\n    // }\n    const { id } = jobInfo;\n    job\n      .getQuesList({ uid })\n      .then((res) => {\n        if (!_componentStatus.current) {\n          _componentStatus = null;\n          return;\n        }\n        setLoginStatus(res.status);\n        // console.log(res);\n        const list = res.data.items.items || [];\n        setJobList(list);\n        setDataLoading(false);\n        setTimeout(() => {\n          id > 0 && scrollToAnchor(id);\n        }, 100);\n        // setLoading(false);\n      })\n      .catch((err) => {\n        setIsError(true);\n      });\n  }, []);\n  // }, [jobListParams]);\n\n  // useEffect(() => {\n  //   const initScrollObserver = () => {\n  //     const options: IntersectionObserverInit = {\n  //       root: null,\n  //       rootMargin: \"0px\",\n  //       threshold: 1.0,\n  //     };\n  //     const Observer: IntersectionObserver = new IntersectionObserver(\n  //       callback,\n  //       options\n  //     );\n  //     if ($botEle.current) {\n  //       Observer.observe($botEle.current);\n  //     }\n  //     setObserver(Observer);\n  //   };\n  //   const callback: IntersectionObserverCallback = (entries) => {\n  //     entries.forEach((entry) => {\n  //       if (entry.isIntersecting) {\n  //         if (isLoading) return;\n  //         setLoading(true);\n  //         let { page } = jobListParamRef.current;\n  //         console.log(\"page\", page);\n  //         setJobListParams((preState) => ({\n  //           ...preState,\n  //           page: ++page,\n  //         }));\n  //       }\n  //     });\n  //   };\n  //   const resetScrollObserver = () => {\n  //     if (observer && $botEle.current) {\n  //       observer.unobserve($botEle.current);\n  //     }\n  //   };\n  //   initScrollObserver();\n  //   return () => {\n  //     resetScrollObserver();\n  //   };\n  // }, [jobList]);\n\n  let history = useHistory();\n  const handleGoInfo = (jid: number) => {\n    setJobInfo({ id: jid });\n    history.push({ pathname: `/job/info`, state: { jid } });\n  };\n\n  // const getRef = (isLastIndex: boolean) => {\n  //   if (isLastIndex) {\n  //     return $botEle;\n  //   }\n  //   return null;\n  // };\n  return (\n    <>\n      <Suspense fallback={Loading}>\n        {dataLoading ? <Loading /> : null}\n        <div className=\"page-job layout-container\">\n          <div className=\"job-recommend\">\n            <div className=\"recommend-item-box\">\n              {jobList.length > 0 ? (\n                jobList.map((item, index) => {\n                  // const refVal = getRef(index === jobList.length - 1);\n                  // const id = index === jobList.length - 1 ? \"bottom\" : \"\";\n                  return (\n                    <div\n                      className=\"recommend-item\"\n                      onClick={() => handleGoInfo(item.jid)}\n                      key={item.jid}\n                      id={\"\" + item.jid}\n                      // ref={refVal}\n                      // id={id}\n                    >\n                      {/* <img\n                      className=\"user-avatar\"\n                      src={require(\"@assets/images/banner2.png\")}\n                      alt=\"\"\n                    /> */}\n                      <div className=\"item-content\">\n                        <h2 className=\"con-til\">{item.company_name}</h2>\n                        {item.tags.length > 0 ? (\n                          <p className=\"user-info\">{item.tags.join(\"·\")}</p>\n                        ) : null}\n                        <p className=\"con-subject\">薪资：{item.salary}</p>\n                        <p className=\"con-subject\">\n                          联系方式：{item.contact_way}\n                        </p>\n                        <p className=\"con-subject\">地址：{item.place}</p>\n                      </div>\n                    </div>\n                  );\n                })\n              ) : !dataLoading ? (\n                <div className=\"tip-msg\">暂无数据</div>\n              ) : null}\n              <i></i>\n              <i></i>\n              <i></i>\n              <i></i>\n              <i></i>\n            </div>\n            {/* {isLoading ? <div className=\"loading-tip\">数据加载中...</div> : \"\"} */}\n            {/* {hasData ? \"\" : <div className=\"loading-tip\">到底了~~</div>} */}\n          </div>\n        </div>\n      </Suspense>\n      <Totast visible={isError}></Totast>\n    </>\n  );\n};\nexport default JobRecommend;\n","import { JobInfo } from \"@models/job\";\n\nimport { atom } from \"recoil\";\n\nexport const jobState = atom({\n  key: \"JobState\",\n  default: {\n    id: 0,\n  },\n});\n","import { selector } from \"recoil\";\nimport { jobState } from \"../atoms/job\";\nimport { JobInfo } from \"@models/job\";\nimport { storage } from \"@utils/index\";\n\nexport const jobSelect = selector({\n  key: \"jobSel\",\n  get: ({ get }) => {\n    let jobInfo = get(jobState);\n    if (jobInfo.id === 0) {\n      try {\n        jobInfo = storage.get(\"jobInfo\") || jobInfo;\n      } catch (error) {\n        jobInfo = jobInfo;\n      }\n    }\n    return jobInfo;\n  },\n  set: ({ set }, newVal: JobInfo) => {\n    set(jobState, newVal);\n    storage.set(\"jobInfo\", newVal);\n  },\n});\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};"],"sourceRoot":""}
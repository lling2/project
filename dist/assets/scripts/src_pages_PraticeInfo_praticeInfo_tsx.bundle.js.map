{"version":3,"sources":["webpack://vip-site-pratice-1/./src/components/Loading/loading.tsx","webpack://vip-site-pratice-1/./src/components/PdfRender/pdfRender.tsx","webpack://vip-site-pratice-1/./src/models/praticeMd.ts","webpack://vip-site-pratice-1/./src/pages/PraticeInfo/components/BookTree/BookTree.tsx","webpack://vip-site-pratice-1/./src/pages/PraticeInfo/components/BookTree/List/List.tsx","webpack://vip-site-pratice-1/./src/pages/PraticeInfo/praticeInfo.tsx","webpack://vip-site-pratice-1/./src/recoil/atoms/praticeMdAtoms.ts","webpack://vip-site-pratice-1/./src/components/PdfRender/pdfRender.css?5572","webpack://vip-site-pratice-1/./src/pages/PraticeInfo/components/BookTree/BookTree.css?d869","webpack://vip-site-pratice-1/./src/pages/PraticeInfo/components/BookTree/List/List.css?3f49","webpack://vip-site-pratice-1/./src/pages/PraticeInfo/praticeInfo.css?dc5b","webpack://vip-site-pratice-1/ignored|/Users/yangling/Desktop/yd/review/vip-site-end/vip-site-pratice-end/node_modules/react-pdf/node_modules/pdfjs-dist/build|canvas","webpack://vip-site-pratice-1/ignored|/Users/yangling/Desktop/yd/review/vip-site-end/vip-site-pratice-end/node_modules/react-pdf/node_modules/pdfjs-dist/build|fs","webpack://vip-site-pratice-1/ignored|/Users/yangling/Desktop/yd/review/vip-site-end/vip-site-pratice-end/node_modules/react-pdf/node_modules/pdfjs-dist/build|http","webpack://vip-site-pratice-1/ignored|/Users/yangling/Desktop/yd/review/vip-site-end/vip-site-pratice-end/node_modules/react-pdf/node_modules/pdfjs-dist/build|https","webpack://vip-site-pratice-1/ignored|/Users/yangling/Desktop/yd/review/vip-site-end/vip-site-pratice-end/node_modules/react-pdf/node_modules/pdfjs-dist/build|url","webpack://vip-site-pratice-1/ignored|/Users/yangling/Desktop/yd/review/vip-site-end/vip-site-pratice-end/node_modules/react-pdf/node_modules/pdfjs-dist/build|zlib"],"names":["Loading","bgOpacity","PdfRender","url","sign","useViewport","wh","ww","useState","numPages","setNumPages","numPagesRef","useRef","current","pageNum","setPageNum","pageNumRef","hasOutline","setHasOutline","onDocumentLoadSuccess","handlItemClick","pageNumber","Number","handlPrevClick","useCallback","handlNextClick","outlineLoadSuccess","outline","pdfParams","useMemo","httpHeaders","xs","useEffect","keydown","e","console","log","key","window","addEventListener","removeEventListener","height","React","initPraticeMd","BookTree","props","showTree","changeShowTree","bookList","selectedKey","onItemClick","onItemSubClick","path","id","classNames","open","map","item","name","title","value","List","list","selected","className","focus","BestPraticeInfo","history","useHistory","md","setMd","useRecoilValue","loginSel","uid","loading","setLoading","useLoginCheck","setLoginStatus","isPdf","setIsPdf","isError","setIsError","location","useLocation","pState","state","storage","replace","useRecoilState","praticeMdState","praticeMdList","setPraticeMdList","currentPath","setCurrentPath","pathId","setPathId","pathIdRef","_componentStatus","scrollEl","document","querySelector","scrollTo","indexOf","pratice","then","res","status","data","setFont","mdList","err","push","pathname","goBack","marginTop","length","atom"],"mappings":"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","file":"scripts/src_pages_PraticeInfo_praticeInfo_tsx.bundle.js","sourcesContent":["import \"./Loading.css\";\nimport React, { FC, ReactNode } from \"react\";\n\ntype props = {\n  children?: ReactNode;\n  bgOpacity?: Boolean;\n};\nconst Loading: FC<props> = ({ bgOpacity = true }) => {\n  return (\n    <>\n      <div\n        className={`components-loading ${\n          bgOpacity ? \"components-loading-opacity\" : \"\"\n        }`}\n      >\n      <div className=\"loading-con\">\n      <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n          <span></span>\n      </div>\n      </div>\n    </>\n  );\n};\n\nexport default Loading;","import React, {\n  FC,\n  useState,\n  useEffect,\n  useCallback,\n  useRef,\n  useMemo,\n  KeyboardEvent,\n} from \"react\";\nimport { Document, Page, Outline } from \"react-pdf/dist/esm/entry.webpack\";\nimport Loading from \"@components/Loading/loading\";\nimport \"./pdfRender.css\";\nimport { useViewport } from \"@hooks/index\";\nimport { PDFTreeNode } from \"pdfjs-dist\";\n\nconst PdfRender: FC<{ url: string; sign: string }> = ({ url, sign }) => {\n  const { wh, ww } = useViewport();\n  const [numPages, setNumPages] = useState(null);\n  const numPagesRef = useRef(numPages);\n  numPagesRef.current = numPages;\n  let [pageNum, setPageNum] = useState(1);\n\n  const pageNumRef = useRef(pageNum);\n  pageNumRef.current = pageNum;\n  const [hasOutline, setHasOutline] = useState(true);\n\n  function onDocumentLoadSuccess({ numPages }: { numPages: number }) {\n    setNumPages(numPages);\n  }\n  const handlItemClick = ({ pageNumber }: { pageNumber: string }) => {\n    setPageNum(Number(pageNumber));\n  };\n  const handlPrevClick = useCallback(() => {\n    if (pageNumRef.current <= 1) return;\n    setPageNum((pageNum) => --pageNum);\n  }, []);\n  const handlNextClick = () => {\n    if (pageNumRef.current >= numPagesRef.current) return;\n    setPageNum((pageNum) => ++pageNum);\n  };\n  const outlineLoadSuccess = (outline: PDFTreeNode[]) => {\n    if (!outline) {\n      setHasOutline(false);\n    }\n  };\n  const pdfParams = useMemo(() => {\n    return {\n      url,\n      httpHeaders: { xs: sign },\n    };\n  }, []);\n  useEffect(() => {\n    function keydown(e: globalThis.KeyboardEvent) {\n      console.log(e);\n      const { key } = e;\n      if (key === \"ArrowLeft\") {\n        handlPrevClick();\n      } else if (key === \"ArrowRight\") {\n        handlNextClick();\n      }\n    }\n    window.addEventListener(\"keydown\", keydown);\n    return () => {\n      window.removeEventListener(\"keydown\", keydown);\n    };\n  }, []);\n  return (\n    <div\n      className=\"pdf-render-con\"\n      style={{\n        height: wh - 166 + \"px\",\n      }}\n    >\n      <div className=\"pdf-page-btn\">\n        <div\n          className={`prev ${pageNum <= 1 ? \"disable\" : \"\"}`}\n          onClick={handlPrevClick}\n        >\n          上一页\n        </div>\n        <div className=\"current-page-num\">\n          {pageNum}/{numPages}\n        </div>\n        <div\n          className={`next ${pageNum >= numPages ? \"disable\" : \"\"}`}\n          onClick={handlNextClick}\n        >\n          下一页\n        </div>\n      </div>\n      <Document\n        file={pdfParams}\n        loading={<Loading />}\n        onLoadSuccess={onDocumentLoadSuccess}\n        className=\"react-pdf-document-custom\"\n      >\n        {hasOutline ? (\n          <Outline\n            onLoadSuccess={outlineLoadSuccess}\n            onItemClick={handlItemClick}\n            className=\"pdf-outline\"\n          ></Outline>\n        ) : null}\n\n        <Page\n          renderAnnotationLayer={false}\n          renderTextLayer={false}\n          pageNumber={pageNum}\n          width={ww * 0.6}\n          className={`${hasOutline ? \"\" : \"react-pdf-page-custom\"}`}\n        />\n      </Document>\n    </div>\n  );\n};\nexport default React.memo(PdfRender);\n","\nexport interface praticeMdType {\n  path: string;\n  sid: string;\n  title: string;\n}\n\nexport const initPraticeMd = (): praticeMdType[] => ([]);\n","\nimport React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./BookTree.css\";\nimport { praticeMdType } from \"@models/praticeMd\";\nimport List from \"./List/List\";\n\ninterface BookTreeProps {\n  bookList: praticeMdType[];\n  selectedKey: string;\n  onItemClick: (path: string, id: number) => void;\n}\n\ntype Props = BookTreeProps;\n\nconst BookTree = (props: Props) => {\n  const [showTree, changeShowTree] = useState(false);\n  const { bookList, selectedKey, onItemClick } = props;\n  const onItemSubClick = (path: string, id: number) => {\n    changeShowTree(!showTree);\n    onItemClick(path, id);\n  };\n\n  return (\n    <div className={classNames(\"book\", { open: showTree })}>\n      <div className=\"book-list\">\n        <List\n          list={\n            bookList.map((item) => ({\n              name: item.title,\n              key: item.path,\n              value: item.path,\n            })) || []\n          }\n          selected={selectedKey}\n          onItemClick={onItemSubClick}\n        />\n      </div>\n      <div className=\"toggle-btn\" onClick={() => changeShowTree(!showTree)}>\n        全书目录\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(BookTree);\n","\nimport React, { ReactNode } from \"react\";\nimport classNames from \"classnames\";\n\nimport \"./List.css\";\ntype ListNode = {\n  name: string;\n  value: string;\n  key: string;\n};\n\ninterface ListProps {\n  list: ListNode[];\n  selected: string;\n  onItemClick: (key: string, id: number) => void;\n  className?: string;\n}\n\ntype Props = ListProps;\n\nexport default function List(props: Props): JSX.Element {\n  const { list, selected, className, onItemClick } = props;\n\n  return (\n    <div className={classNames(\"list\", className)}>\n      {list.map((item: ListNode) => {\n        return (\n          <div\n            className={classNames(\"list-item\", {\n              focus: selected === item.key,\n            })}\n            key={item.key}\n            onClick={() => onItemClick(item.value, 0)}\n          >\n            {item.name}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React, {\n  FC,\n  useState,\n  useEffect,\n  Suspense,\n  useRef,\n  useCallback,\n} from \"react\";\n\nimport \"./praticeInfo.css\";\nimport MarkRender from \"@components/MarkRender/markRender\";\n\nimport { pratice } from \"@api/index\";\nimport Loading from \"@components/Loading/loading\";\nimport { useParams, useHistory, useLocation } from \"react-router-dom\";\nimport { setFont, storage } from \"@utils/index\";\n\nimport { useLoginCheck } from \"@hooks/index\";\nimport { useRecoilValue, useRecoilState } from \"recoil\";\nimport { loginSel } from \"@recoil/selectors/loginSelectors\";\nimport BookTree from \"./components/BookTree/BookTree\";\nimport { praticeMdListSel } from \"@recoil/selectors/praticeMdSelectors\";\n\nimport { praticeMdType } from \"@models/praticeMd\";\nimport { praticeMdState } from \"@recoil/atoms/praticeMdAtoms\";\nimport PdfRender from \"@components/PdfRender/pdfRender\";\nimport Totast from \"@components/Totast/totast\";\n\nconst BestPraticeInfo: FC<{}> = () => {\n  // console.log(\"藏经阁详情\");\n  const history = useHistory();\n  const [md, setMd] = useState(\"\");\n  const { uid,sign } = useRecoilValue(loginSel);\n  const [loading, setLoading] = useState(true);\n  const { setLoginStatus } = useLoginCheck();\n  const [isPdf, setIsPdf] = useState(false);\n  const [isError,setIsError] = useState(false);\n  // let { path } = useParams<{ path: string }>();\n  let location = useLocation<{ path: string; id: number }>();\n  let pState: { path: string; id: number } = {\n    path: \"\",\n    id: 0,\n  };\n  if (!location.state) {\n    pState = storage.get(\"pState\");\n    if (!pState) {\n      history.replace(\"/ques\");\n      return <></>;\n    }\n  } else {\n    pState = location.state;\n    storage.set(\"pState\", pState);\n  }\n\n  const [praticeMdList, setPraticeMdList] = useRecoilState<praticeMdType[]>(\n    praticeMdState\n  );\n  const [currentPath, setCurrentPath] = useState(pState.path);\n  const [pathId, setPathId] = useState(pState.id);\n  const pathIdRef = useRef(pathId);\n  pathIdRef.current = pathId;\n\n  let _componentStatus = useRef(true);\n  useEffect(() => {\n    return () => {\n      _componentStatus.current = false;\n    };\n  }, []);\n  useEffect(() => {\n    const scrollEl = document.querySelector(\".markdown-box .content\");\n    scrollEl && scrollEl.scrollTo(0, 0);\n  }, [currentPath]);\n\n  useEffect(() => {\n    if (!currentPath && isPdf) {\n      return;\n    }\n    if (pState.path.indexOf(\".pdf\") !== -1) {\n      setIsPdf(true);\n      return;\n    }\n    pratice\n      .getBestPraticeInfo({\n        path: `${currentPath}.md`,\n        id: pathId,\n        uid,\n      })\n      .then((res) => {\n        if (!_componentStatus.current) {\n          _componentStatus = null;\n          return;\n        }\n        setLoginStatus(res.status);\n        setMd(res.data.data || \"\");\n        setFont(res.data.key, \"praticeInfo\", setLoading);\n        setPraticeMdList(res.data.mdList);\n      }).catch(err=>{\n        setIsError(true);\n      });\n  }, [currentPath]);\n  const onItemClick = (path: string) => {\n    setLoading(true);\n    setCurrentPath(path);\n    history.push({\n      pathname: `/pratice/info`,\n      state: { path, id: pathIdRef.current },\n    });\n  };\n  const goBack = useCallback(() => {\n    history.replace(\"/pratice\");\n  }, []);\n  return (\n    <>\n      <Suspense fallback={Loading}>\n        <div\n          className=\"page-pratice-info layout-container\"\n          style={{ marginTop: \"10px\" }}\n        >\n          <div className=\"md-back-btn\" onClick={goBack}>\n            <i className=\"iconfont\">&#xe653;</i>\n          </div>\n          {isPdf ? (\n            <PdfRender\n              sign={sign}\n              url={`https://vip-api.yidengfe.com/api/getBook?path=${pState.path}&sid=${uid}`}\n            />\n          ) : (\n            <>\n              {praticeMdList.length > 0 ? (\n                <BookTree\n                  selectedKey={currentPath}\n                  bookList={praticeMdList}\n                  onItemClick={onItemClick}\n                />\n              ) : null}\n              <MarkRender mardownStr={md}></MarkRender>\n              {loading ? <Loading /> : null}\n            </>\n          )}\n        </div>\n      </Suspense>\n      <Totast visible={isError}></Totast>\n    </>\n  );\n};\nexport default BestPraticeInfo;\n","\nimport { atom } from \"recoil\";\nimport { initPraticeMd } from \"@models/praticeMd\";\n\nexport const praticeMdState = atom({\n  key: \"praticeMdState\",\n  default: initPraticeMd(),\n});\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}
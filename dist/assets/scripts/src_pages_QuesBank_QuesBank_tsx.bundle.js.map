{"version":3,"sources":["webpack://vip-site-pratice-1/./src/components/Pagination/pagination.tsx","webpack://vip-site-pratice-1/./src/components/SortNav/sortNav.tsx","webpack://vip-site-pratice-1/./src/models/ques.ts","webpack://vip-site-pratice-1/./src/pages/QuesBank/QuesBank.tsx","webpack://vip-site-pratice-1/./src/recoil/atoms/quesAtoms.ts","webpack://vip-site-pratice-1/./src/recoil/selectors/quesListSelectors.ts","webpack://vip-site-pratice-1/./src/components/Pagination/pagination.css?d155","webpack://vip-site-pratice-1/./src/components/SortNav/sortNav.css?5e29","webpack://vip-site-pratice-1/./src/pages/QuesBank/quesBank.css?da5e"],"names":["Pagination","totalPage","onPrev","onNext","onCurrent","curPage","isShow","useState","pageNum","setPageNum","pageNumArr","Array","fill","map","item","index","pageNumGap","useEffect","handlePrev","handleNext","handlePageNumClick","useCallback","opacity","React","SortNav","props","navItems","curItem","curItemId","liDom","useRef","curId","setCurId","handleItemClick","event","Number","currentTarget","dataset","id","name","initQuesListParams","uid","condition","biz_type","page","page_count","initQuesParams","curNav","curQuesIndex","quesList","QuesBank","history","useHistory","useLoginCheck","setLoginStatus","useRecoilValue","loginSel","listLoading","setListLoading","sortLoading","setSortLoading","useRecoilState","quesListSelect","quesListParam","setQuesListParam","quesListParams","current","num","setNum","quesSelect","quesParam","setQuesParam","quesParams","setQuesList","pageCount","setPageCount","setNavItems","navItemsArr","_componentStatus","isError","setIsError","document","querySelector","scrollTo","ques","then","res","status","navArr","data","err","curQid","list","pages","setTimeout","scrollToAnchor","setPageParam","goPraticeInfo","push","pathname","state","qid","tagName","tech_tag","Loading","backgroundColor","qtype","title","subject","quesListState","atom","key","quesState","selector","get","storage","error","set","newVal"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAOA;;AAWA,IAAMA,UAAyB,GAAG,SAA5BA,UAA4B,OAO5B;AAAA,MANJC,SAMI,QANJA,SAMI;AAAA,MALJC,MAKI,QALJA,MAKI;AAAA,MAJJC,MAII,QAJJA,MAII;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,OAEI,QAFJA,OAEI;AAAA,yBADJC,MACI;AAAA,MADJA,MACI,4BADK,KACL;;AACJ;AACA,kBAA4BC,+CAAQ,CAACF,OAAD,CAApC;AAAA;AAAA,MAAKG,OAAL;AAAA,MAAcC,UAAd,iBAFI,CAGJ;;;AACA,MAAIC,UAAU,GAAG,IAAIC,KAAJ,CAAUV,SAAV,EAAqBW,IAArB,CAA0B,CAA1B,EAA6BC,GAA7B,CAAiC,UAACC,IAAD,EAAOC,KAAP;AAAA,WAAiBA,KAAK,GAAG,CAAzB;AAAA,GAAjC,CAAjB,CAJI,CAKJ;;AACA,MAAIC,UAAU,GAAG,CAAjB;AAEAC,kDAAS,CAAC,YAAM;AACdR,cAAU,CAACJ,OAAD,CAAV;AACD,GAFQ,CAAT;;AAGA,MAAMa,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAIV,OAAO,IAAI,CAAf,EAAkB;AAClBC,cAAU,CAAC,EAAED,OAAH,CAAV;AACAN,UAAM,CAACM,OAAD,CAAN;AACD,GAJD;;AAKA,MAAMW,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAIX,OAAO,IAAIP,SAAf,EAA0B;AAC1BQ,cAAU,CAAC,EAAED,OAAH,CAAV;AACAL,UAAM,CAACK,OAAD,CAAN;AACD,GAJD;;AAKA,MAAMY,kBAAkB,GAAGC,kDAAW,CAAC,UAACN,KAAD,EAAmB;AACxDN,cAAU,CAACM,KAAD,CAAV;AACAX,aAAS,CAACW,KAAD,CAAT;AACD,GAHqC,EAGnC,EAHmC,CAAtC;AAKA,sBACE;AACE,aAAS,EAAC,6BADZ;AAEE,SAAK,EAAE;AAAEO,aAAO,EAAEhB,MAAM,GAAG,CAAH,GAAO;AAAxB;AAFT,kBAIE;AACE,WAAO,EAAEY,UADX;AAEE,aAAS,qBAAcV,OAAO,KAAK,CAAZ,GAAgB,SAAhB,GAA4B,EAA1C;AAFX,0BAJF,eAWE;AAAK,aAAS,EAAC;AAAf,KACGE,UAAU,CAACG,GAAX,CAAe,UAACC,IAAD,EAAU;AACxB;AACA,QAAIN,OAAO,GAAG,CAAd,EAAiB;AACfQ,gBAAU,GAAGR,OAAO,GAAG,CAAvB;AACD,KAJuB,CAKxB;;;AACA,QAAIM,IAAI,KAAK,CAAb,EAAgB;AACd,0BACE;AACE,eAAO,EAAE,mBAAM;AACbM,4BAAkB,CAACN,IAAD,CAAlB;AACD,SAHH;AAIE,WAAG,EAAEA,IAJP;AAKE,iBAAS,qBAAcA,IAAI,KAAKN,OAAT,GAAmB,KAAnB,GAA2B,EAAzC;AALX,SAOGM,IAPH,CADF;AAWD,KAlBuB,CAoBxB;;;AACA,QAAIA,IAAI,KAAK,CAAT,IAAcN,OAAO,GAAG,CAA5B,EAA+B;AAC7B,0BACE;AACE,eAAO,EAAE,mBAAM;AACbY,4BAAkB,CAACN,IAAD,CAAlB;AACD,SAHH;AAIE,WAAG,EAAEA,IAJP;AAKE,iBAAS,qBAAcA,IAAI,KAAKN,OAAT,GAAmB,KAAnB,GAA2B,EAAzC;AALX,eADF;AAWD,KAjCuB,CAmCxB;;;AACA,QAAIM,IAAI,KAAK,CAAT,IAAcN,OAAO,IAAI,CAA7B,EAAgC;AAC9B,0BACE;AACE,eAAO,EAAE,mBAAM;AACbY,4BAAkB,CAACN,IAAD,CAAlB;AACD,SAHH;AAIE,WAAG,EAAEA,IAJP;AAKE,iBAAS,qBAAcA,IAAI,KAAKN,OAAT,GAAmB,KAAnB,GAA2B,EAAzC;AALX,SAOGM,IAPH,CADF;AAWD,KAhDuB,CAiDxB;;;AACA,QACEN,OAAO,IAAIP,SAAX,IACAa,IAAI,GAAG,IAAIE,UADX,IAEAF,IAAI,IAAI,IAAIE,UAHd,EAIE;AACA,0BACE;AACE,eAAO,EAAE,mBAAM;AACbI,4BAAkB,CAACN,IAAD,CAAlB;AACD,SAHH;AAIE,iBAAS,qBAAcA,IAAI,KAAKN,OAAT,GAAmB,KAAnB,GAA2B,EAAzC,CAJX;AAKE,WAAG,EAAEM;AALP,SAOGA,IAPH,CADF;AAWD;AACF,GAnEA,CADH,EAqEGb,SAAS,GAAG,EAAZ,IAAkBO,OAAO,IAAIP,SAAS,GAAG,CAAzC,gBACC;AAAK,aAAS,EAAC;AAAf,WADD,GAGC,EAxEJ,EA2EGA,SAAS,GAAG,EAAZ,IAAkBO,OAAO,IAAIP,SAAS,GAAG,CAAzC,gBACC;AACE,WAAO,EAAE,mBAAM;AACbmB,wBAAkB,CAACnB,SAAD,CAAlB;AACD,KAHH;AAIE,aAAS,qBAAcA,SAAS,KAAKO,OAAd,GAAwB,KAAxB,GAAgC,EAA9C;AAJX,KAMGP,SANH,CADD,GAUC,EArFJ,CAXF,eAoGE;AACE,WAAO,EAAEkB,UADX;AAEE,aAAS,qBAAcX,OAAO,KAAKP,SAAZ,GAAwB,SAAxB,GAAoC,EAAlD;AAFX,0BApGF,CADF;AA6GD,CA9ID;;AAgJA,8EAAesB,uCAAA,CAAWvB,UAAX,CAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClKA;AAQA;;AAQA,IAAMwB,OAAkB,GAAG,SAArBA,OAAqB,CAACC,KAAD,EAAW;AACpC;AACA,wBAA8CA,KAA9C,CAAQC,QAAR;AAAA,MAAQA,QAAR,gCAAmB,EAAnB;AAAA,MAAuBC,OAAvB,GAA8CF,KAA9C,CAAuBE,OAAvB;AAAA,MAAgCC,SAAhC,GAA8CH,KAA9C,CAAgCG,SAAhC;AAAA,MACEC,KADF,GACUC,6CAAM,CAAgB,IAAhB,CADhB;AAAA,kBAEsBvB,+CAAQ,CAASqB,SAAT,CAF9B;AAAA;AAAA,MAEGG,KAFH;AAAA,MAEUC,QAFV;AAAA,MAGEC,eAHF,GAGoBZ,kDAAW,CAAC,UAACa,KAAD,EAA4C;AACxE,QAAMH,KAAK,GAAGI,MAAM,CAACD,KAAK,CAACE,aAAN,CAAoBC,OAApB,CAA4BC,EAA5B,IAAkC,CAAnC,CAApB;AACAN,YAAQ,CAACD,KAAD,CAAR;AACAJ,WAAO,CAACI,KAAD,CAAP;AACD,GAJ4B,EAI1B,EAJ0B,CAH/B;;AAQA,sBACE;AAAI,aAAS,EAAC;AAAd,KACGL,QAAQ,CAACb,GAAT,CAAa,UAACC,IAAD;AAAA,wBACZ;AACE,SAAG,EAAEe,KADP;AAEE,eAAS,YAAKE,KAAK,KAAKjB,IAAI,CAACwB,EAAf,GAAoB,UAApB,GAAiC,EAAtC,CAFX;AAGE,aAAO,EAAEL,eAHX;AAIE,SAAG,EAAEnB,IAAI,CAACwB,EAJZ;AAKE,iBAASxB,IAAI,CAACwB;AALhB,OAOGxB,IAAI,CAACyB,IAPR,CADY;AAAA,GAAb,CADH,CADF;AAeD,CAzBD;;AA0BA,8EAAehB,uCAAA,CAAWC,OAAX,CAAf,E;;;;;;;;;;;;;;;;ACxBO,IAAMgB,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,SAAuB;AACvDC,OAAG,EAAE,CADkD;AAEvDC,aAAS,EAAE;AACTC,cAAQ,EAAE;AADD,KAF4C;AAKvDC,QAAI,EAAE,CALiD;AAMvDC,cAAU,EAAE;AAN2C,GAAvB;AAAA,CAA3B;AAQA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAmB;AAC/CC,UAAM,EAAE,CADuC;AAE/CC,gBAAY,EAAE,CAAC,CAFgC;AAG/C/C,aAAS,EAAE,CAHoC;AAI/CgD,YAAQ,EAAE;AAJqC,GAAnB;AAAA,CAAvB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BP;AAQA;CAEA;;CAEA;;CAEA;;AACA;AAEA;CAEA;;AACA;CAEA;;CAEA;;AACA;CAMA;;AACA;;AAEA,IAAMC,QAAgB,GAAG,SAAnBA,QAAmB,GAAM;AAC7B;AACA,MAAMC,OAAO,GAAGC,6DAAU,EAA1B;;AACA,uBAA2BC,2DAAa,EAAxC;AAAA,MAAQC,cAAR,kBAAQA,cAAR;;AAEA,wBAAgBC,uDAAc,CAACC,sEAAD,CAA9B;AAAA,MAAQf,GAAR,mBAAQA,GAAR;;AAEA,kBAAsClC,+CAAQ,CAAC,IAAD,CAA9C;AAAA;AAAA,MAAOkD,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAAsCnD,+CAAQ,CAAC,IAAD,CAA9C;AAAA;AAAA,MAAOoD,WAAP;AAAA,MAAoBC,cAApB;;AAEA,wBAA0CC,uDAAc,CAACC,gFAAD,CAAxD;AAAA;AAAA,MAAOC,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,MAAMC,cAAc,GAAGnC,6CAAM,CAACiC,aAAD,CAA7B,CAX6B,CAY7B;AACA;AACA;AACA;AACA;;AACAE,gBAAc,CAACC,OAAf,GAAyBH,aAAzB;;AAEA,mBAAsBxD,+CAAQ,CAAC,CAAD,CAA9B;AAAA;AAAA,MAAO4D,GAAP;AAAA,MAAYC,MAAZ;;AAEA,yBAAkCP,uDAAc,CAACQ,4EAAD,CAAhD;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AACA,MAAMC,UAAU,GAAG1C,6CAAM,CAACwC,SAAD,CAAzB;AACAE,YAAU,CAACN,OAAX,GAAqBI,SAArB;;AAEA,mBAAgC/D,+CAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAO0C,QAAP;AAAA,MAAiBwB,WAAjB;;AACA,mBAAkClE,+CAAQ,CAAC,CAAD,CAA1C;AAAA;AAAA,MAAOmE,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAM1E,SAAS,GAAG6B,6CAAM,CAAC4C,SAAD,CAAxB;AACAzE,WAAS,CAACiE,OAAV,GAAoBQ,SAApB;;AAEA,oBAAgCnE,+CAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOmB,QAAP;AAAA,MAAiBkD,WAAjB;;AACA,MAAMC,WAAW,GAAG/C,6CAAM,CAACJ,QAAD,CAA1B;AACAmD,aAAW,CAACX,OAAZ,GAAsBxC,QAAtB;;AAEA,MAAIoD,gBAAgB,GAAGhD,6CAAM,CAAC,IAAD,CAA7B;;AAEA,oBAA8BvB,+CAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOwE,OAAP;AAAA,MAAgBC,UAAhB;;AACA/D,kDAAS,CAAC,YAAM;AACd,WAAO,YAAM;AACX6D,sBAAgB,CAACZ,OAAjB,GAA2B,KAA3B;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMAjD,kDAAS,CAAC,YAAM;AACdgE,YAAQ,CAACC,aAAT,CAAuB,YAAvB,EAAqCC,QAArC,CAA8C,CAA9C,EAAiD,CAAjD;AACD,GAFQ,EAEN,CAACb,SAAS,CAACvB,MAAX,EAAmBgB,aAAa,CAACnB,IAAjC,CAFM,CAAT,CA5C6B,CAgD7B;;AACA3B,kDAAS,CAAC,YAAM;AACd2C,kBAAc,CAAC,IAAD,CAAd;AACAwB,4DAAA,CACe;AAAE3C,SAAG,EAAHA;AAAF,KADf,EAEG4C,IAFH,CAEQ,UAACC,GAAD,EAAS;AACb,UAAI,CAACR,gBAAgB,CAACZ,OAAtB,EAA+B;AAC7BY,wBAAgB,GAAG,IAAnB;AACA;AACD;;AACDxB,oBAAc,CAACgC,GAAG,CAACC,MAAL,CAAd;AAEA,UAAMC,MAAM,GAAGF,GAAG,CAACG,IAAJ,IAAY,EAA3B;AACAb,iBAAW,CAACY,MAAD,CAAX;AACA5B,oBAAc,CAAC,KAAD,CAAd;AACD,KAZH,WAaS,UAAC8B,GAAD,EAAS;AACd9B,oBAAc,CAAC,KAAD,CAAd;AACAoB,gBAAU,CAAC,IAAD,CAAV;AACD,KAhBH;AAiBD,GAnBQ,EAmBN,EAnBM,CAAT,CAjD6B,CAsE7B;;AACA/D,kDAAS,CAAC,YAAM;AACdyC,kBAAc,CAAC,IAAD,CAAd;AACA,QAAQd,IAAR,GAA6BmB,aAA7B,CAAQnB,IAAR;AAAA,QAAcC,UAAd,GAA6BkB,aAA7B,CAAclB,UAAd;AACA,QAAQG,YAAR,GAA2CsB,SAA3C,CAAQtB,YAAR;AAAA,QAAsBC,QAAtB,GAA2CqB,SAA3C,CAAsBrB,QAAtB;AAAA,QAAgC0C,MAAhC,GAA2CrB,SAA3C,CAAgCqB,MAAhC;AACAP,4DAAA,iCACoBrB,aADpB,GACsC;AAAEtB,SAAG,EAAHA;AAAF,KADtC,GAEG4C,IAFH,CAEQ,UAACC,GAAD,EAAS;AACb,UAAI,CAACR,gBAAgB,CAACZ,OAAtB,EAA+B;AAC7BY,wBAAgB,GAAG,IAAnB;AACA;AACD;;AACDxB,oBAAc,CAACgC,GAAG,CAACC,MAAL,CAAd;;AACA,iBAA6BD,GAAG,CAACG,IAAJ,IAAY,EAAzC;AAAA,2BAAQG,IAAR;AAAA,UAAQA,IAAR,0BAAe,EAAf;AAAA,UAAmBC,KAAnB,QAAmBA,KAAnB;;AACApB,iBAAW,CAACmB,IAAD,CAAX;AACAjB,kBAAY,CAACkB,KAAD,CAAZ;AACAnC,oBAAc,CAAC,KAAD,CAAd;AACAa,kBAAY,iCACPD,SADO;AAEVrB,gBAAQ,EAAE2C,IAFA;AAGV3F,iBAAS,EAAE4F,KAAK,GAAGhD;AAHT,SAAZ;AAKAiD,gBAAU,CAAC,YAAM;AACfH,cAAM,IAAI,CAAV,IAAeI,6DAAc,CAACJ,MAAD,CAA7B;AACD,OAFS,EAEP,GAFO,CAAV;AAGD,KApBH,WAqBS,UAACD,GAAD,EAAS;AACdjB,iBAAW,CAAC,EAAD,CAAX;AACAf,oBAAc,CAAC,KAAD,CAAd;AACAsB,gBAAU,CAAC,IAAD,CAAV;AACD,KAzBH;AA0BD,GA9BQ,EA8BN,CAACjB,aAAD,CA9BM,CAAT;AAgCA,MAAMiC,YAAY,GAAG3E,kDAAW,CAAC,UAACuB,IAAD,EAAkB;AACjDoB,oBAAgB,iCACXC,cAAc,CAACC,OADJ;AAEdtB,UAAI,EAAJA;AAFc,OAAhB;AAID,GAL+B,EAK7B,EAL6B,CAAhC;AAOA,MAAMqD,aAAa,GAAG5E,kDAAW,CAAC,UAACiB,EAAD,EAAavB,KAAb,EAA+B;AAC/DwD,gBAAY,iCACPC,UAAU,CAACN,OADJ;AAEVlB,kBAAY,EAAEjC,KAFJ;AAGVd,eAAS,EAAEA,SAAS,CAACiE,OAAV,GAAoB,EAHrB;AAIVyB,YAAM,EAAErD;AAJE,OAAZ;AAMAwD,cAAU,CAAC,YAAM;AACf3C,aAAO,CAAC+C,IAAR,CAAa;AAAEC,gBAAQ,cAAV;AAA0BC,aAAK,EAAE;AAAEC,aAAG,EAAE/D;AAAP;AAAjC,OAAb;AACD,KAFS,EAEP,CAFO,CAAV;AAGD,GAVgC,EAU9B,EAV8B,CAAjC;AAYA,MAAMpC,MAAM,GAAGmB,kDAAW,CAAC,UAAC8C,GAAD,EAAiB;AAC1C6B,gBAAY,CAAC7B,GAAD,CAAZ;AACD,GAFyB,EAEvB,EAFuB,CAA1B;AAGA,MAAMhE,MAAM,GAAGkB,kDAAW,CAAC,UAAC8C,GAAD,EAAiB;AAC1C6B,gBAAY,CAAC7B,GAAD,CAAZ;AACD,GAFyB,EAEvB,EAFuB,CAA1B;AAGA,MAAM/D,SAAS,GAAGiB,kDAAW,CAAC,UAAC8C,GAAD,EAAiB;AAC7C6B,gBAAY,CAAC7B,GAAD,CAAZ;AACD,GAF4B,EAE1B,EAF0B,CAA7B;AAGA,MAAMxC,OAAO,GAAGN,kDAAW,CAAC,UAACiB,EAAD,EAAgB;AAC1C,QAAIA,EAAE,KAAK,CAAX,EAAc;AACZ0B,sBAAgB,iCACXC,cAAc,CAACC,OADJ;AAEdxB,iBAAS,EAAE;AACTC,kBAAQ,EAAE;AADD,SAFG;AAKdC,YAAI,EAAE;AALQ,SAAhB;AAOD,KARD,MAQO;AACL,UAAI0D,OAAO,GAAGzB,WAAW,CAACX,OAAZ,CAAoB5B,EAAE,GAAG,CAAzB,EAA4BC,IAA1C;AACAyB,sBAAgB,iCACXC,cAAc,CAACC,OADJ;AAEdxB,iBAAS,EAAE;AACTC,kBAAQ,EAAE,CADD;AAET4D,kBAAQ,EAAE,CAACD,OAAD;AAFD,SAFG;AAMd1D,YAAI,EAAE;AANQ,SAAhB;AAQD;;AACD2B,gBAAY,iCACPC,UAAU,CAACN,OADJ;AAEVnB,YAAM,EAAET,EAFE;AAGVW,cAAQ,EAAE;AAHA,OAAZ;AAKD,GAzB0B,EAyBxB,EAzBwB,CAA3B;AA0BA,sBACE,iHACE,iDAAC,2CAAD;AAAU,YAAQ,EAAEuD,gEAAOA;AAA3B,kBACE,iDAAC,gEAAD;AACE,YAAQ,EAAE9E,QADZ;AAEE,aAAS,EAAE4C,SAAS,CAACvB,MAFvB;AAGE,WAAO,EAAEpB;AAHX,IADF,eAME;AAAK,aAAS,EAAC;AAAf,kBACE;AAAK,aAAS,EAAC;AAAf,KACGsB,QAAQ,CAACpC,GAAT,CAAa,UAACC,IAAD,EAAOC,KAAP;AAAA,wBACZ;AACE,eAAS,EAAC,WADZ;AAEE,SAAG,EAAED,IAAI,CAACuF,GAFZ;AAGE,QAAE,EAAEvF,IAAI,CAACuF,GAHX;AAIE,aAAO,EAAE,mBAAM;AACbJ,qBAAa,CAACnF,IAAI,CAACuF,GAAN,EAAWtF,KAAX,CAAb;AACD;AANH,oBAQE;AAAK,eAAS,EAAC;AAAf,oBACE;AAAG,WAAK,EAAE;AAAE0F,uBAAe,EAAE;AAAnB;AAAV,MADF,eAEE;AAAG,WAAK,EAAE;AAAEA,uBAAe,EAAE;AAAnB;AAAV,MAFF,eAGE;AAAG,WAAK,EAAE;AAAEA,uBAAe,EAAE;AAAnB;AAAV,MAHF,CARF,eAaE;AAAK,eAAS,EAAC;AAAf,oBACE;AAAG,eAAS,EAAC;AAAb,OAAyB3F,IAAI,CAACA,IAAI,CAAC4F,KAAN,CAAJ,CAAiBC,KAA1C,CADF,EAEG7F,IAAI,CAACA,IAAI,CAAC4F,KAAN,CAAJ,CAAiBE,OAAjB,gBACC,iDAAC,sEAAD;AACE,gBAAU,EAAE9F,IAAI,CAACA,IAAI,CAAC4F,KAAN,CAAJ,CAAiBE,OAD/B;AAEE,eAAS,EAAE,KAFb;AAGE,eAAS,EAAE;AAHb,MADD,GAMG,IARN,CAbF,CADY;AAAA,GAAb,CADH,CADF,CANF,eAoCE,iDAAC,sEAAD;AACE,aAAS,EAAElC,SADb;AAEE,UAAM,EAAExE,MAFV;AAGE,UAAM,EAAEC,MAHV;AAIE,aAAS,EAAEC,SAJb;AAKE,WAAO,EAAE2D,aAAa,CAACnB,IALzB;AAME,UAAM,EAAE,CAACe;AANX,IApCF,EA6CGF,WAAW,gBAAG,iDAAC,gEAAD,OAAH,GAAiB,IA7C/B,CADF,eAgDE,iDAAC,8DAAD;AAAQ,WAAO,EAAEsB;AAAjB,IAhDF,CADF;AAoDD,CAjND;;AAkNA,iEAAe7B,QAAf,E;;;;;;;;;;;;;;;;;;ACpPA;AACA;AAEO,IAAM2D,aAAa,GAAGC,4CAAI,CAAC;AAChCC,KAAG,EAAE,gBAD2B;AAEhC,aAASvE,gEAAkB;AAFK,CAAD,CAA1B;AAIA,IAAMwE,SAAS,GAAGF,4CAAI,CAAC;AAC5BC,KAAG,EAAE,YADuB;AAE5B,aAASjE,4DAAc;AAFK,CAAD,CAAtB,C;;;;;;;;;;;;;;;;;;;ACPP;AACA;AAOA;AAEO,IAAMgB,cAAc,GAAGmD,gDAAQ,CAAC;AACrCF,KAAG,EAAE,aADgC;AAErCG,KAAG,EAAE,mBAAa;AAAA,QAAVA,IAAU,QAAVA,GAAU;;AAChB,QAAInD,aAAa,GAAGmD,IAAG,CAACL,2DAAD,CAAvB;;AACA,QAAI9C,aAAa,CAACtB,GAAd,KAAsB,CAA1B,EAA6B;AAC3B,UAAI;AACFsB,qBAAa,GAAGoD,qDAAA,CAAY,eAAZ,KAAgCpD,aAAhD;AACD,OAFD,CAEE,OAAOqD,KAAP,EAAc;AACdrD,qBAAa,GAAGA,aAAhB;AACD;AACF;;AACD,WAAOA,aAAP;AACD,GAZoC;AAarCsD,KAAG,EAAE,oBAAUC,MAAV,EAAqC;AAAA,QAAlCD,IAAkC,SAAlCA,GAAkC;;AACxCA,QAAG,CAACR,2DAAD,EAAgBS,MAAhB,CAAH;;AACAH,yDAAA,CAAY,eAAZ,EAA6BG,MAA7B;AACD;AAhBoC,CAAD,CAA/B;AAkBA,IAAMjD,UAAU,GAAG4C,gDAAQ,CAAC;AACjCF,KAAG,EAAE,SAD4B;AAEjCG,KAAG,EAAE,oBAAa;AAAA,QAAVA,KAAU,SAAVA,GAAU;;AAChB,QAAI5C,SAAS,GAAG4C,KAAG,CAACF,uDAAD,CAAnB;;AACA,QAAI1C,SAAS,CAACtB,YAAV,KAA2B,CAAC,CAAhC,EAAmC;AACjC,UAAI;AACFsB,iBAAS,GAAG6C,qDAAA,CAAY,WAAZ,KAA4B7C,SAAxC;AACD,OAFD,CAEE,OAAO8C,KAAP,EAAc;AACd9C,iBAAS,GAAGA,SAAZ;AACD;AACF;;AACD,WAAOA,SAAP;AACD,GAZgC;AAajC+C,KAAG,EAAE,oBAAUC,MAAV,EAAiC;AAAA,QAA9BD,KAA8B,SAA9BA,GAA8B;;AACpCA,SAAG,CAACL,uDAAD,EAAYM,MAAZ,CAAH;;AACAH,yDAAA,CAAY,WAAZ,EAAyBG,MAAzB;AACD;AAhBgC,CAAD,CAA3B,C;;;;;;;;;;;;AC5BP;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;ACAA","file":"scripts/src_pages_QuesBank_QuesBank_tsx.bundle.js","sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  FC,\n  useState,\n} from \"react\";\n\nimport \"./pagination.css\";\n\ntype PagiProps = {\n  totalPage: number;\n  onPrev?: (num: number) => void;\n  onNext?: (num: number) => void;\n  onCurrent?: (num: number) => void;\n  curPage: number;\n  isShow?: boolean;\n};\n\nconst Pagination: FC<PagiProps> = ({\n  totalPage,\n  onPrev,\n  onNext,\n  onCurrent,\n  curPage,\n  isShow = false,\n}) => {\n  // console.log(\"页码组件\");\n  let [pageNum, setPageNum] = useState(curPage);\n  // 拿到1，2，2 页数\n  let pageNumArr = new Array(totalPage).fill(1).map((item, index) => index + 1);\n  // 翻页处理\n  let pageNumGap = 0;\n\n  useEffect(() => {\n    setPageNum(curPage);\n  });\n  const handlePrev = () => {\n    if (pageNum <= 1) return;\n    setPageNum(--pageNum);\n    onPrev(pageNum);\n  };\n  const handleNext = () => {\n    if (pageNum >= totalPage) return;\n    setPageNum(++pageNum);\n    onNext(pageNum);\n  };\n  const handlePageNumClick = useCallback((index: number) => {\n    setPageNum(index);\n    onCurrent(index);\n  }, []);\n\n  return (\n    <div\n      className=\"pagination layout-container\"\n      style={{ opacity: isShow ? 1 : 0 }}\n    >\n      <div\n        onClick={handlePrev}\n        className={`page-btn ${pageNum === 1 ? \"disable\" : \"\"}`}\n      >\n        上一页\n      </div>\n\n      <div className=\"page-numbers\">\n        {pageNumArr.map((item) => {\n          // 数字翻页的计算\n          if (pageNum > 8) {\n            pageNumGap = pageNum - 8;\n          }\n          // \n          if (item === 1) {\n            return (\n              <div\n                onClick={() => {\n                  handlePageNumClick(item);\n                }}\n                key={item}\n                className={`page-num ${item === pageNum ? \"act\" : \"\"}`}\n              >\n                {item}\n              </div>\n            );\n          }\n\n          // 是否显示点\n          if (item === 2 && pageNum > 8) {\n            return (\n              <div\n                onClick={() => {\n                  handlePageNumClick(item);\n                }}\n                key={item}\n                className={`page-num ${item === pageNum ? \"act\" : \"\"}`}\n              >\n                ...\n              </div>\n            );\n          }\n\n          // 如果pageNum 不超过，就不用显示\n          if (item === 2 && pageNum <= 8) {\n            return (\n              <div\n                onClick={() => {\n                  handlePageNumClick(item);\n                }}\n                key={item}\n                className={`page-num ${item === pageNum ? \"act\" : \"\"}`}\n              >\n                {item}\n              </div>\n            );\n          }\n          // ... 之间要显示的\n          if (\n            pageNum <= totalPage &&\n            item > 2 + pageNumGap &&\n            item <= 9 + pageNumGap\n          ) {\n            return (\n              <div\n                onClick={() => {\n                  handlePageNumClick(item);\n                }}\n                className={`page-num ${item === pageNum ? \"act\" : \"\"}`}\n                key={item}\n              >\n                {item}\n              </div>\n            );\n          }\n        })}\n        {totalPage > 10 && pageNum <= totalPage - 3 ? (\n          <div className=\"page-num\">...</div>\n        ) : (\n          \"\"\n        )}\n        \n        {totalPage > 10 && pageNum <= totalPage - 2 ? (\n          <div\n            onClick={() => {\n              handlePageNumClick(totalPage);\n            }}\n            className={`page-num ${totalPage === pageNum ? \"act\" : \"\"}`}\n          >\n            {totalPage}\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n\n      <div\n        onClick={handleNext}\n        className={`page-btn ${pageNum === totalPage ? \"disable\" : \"\"}`}\n      >\n        下一页\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Pagination);\n","import React, {\n  FC,\n  ReactNode,\n  useRef,\n  MouseEvent,\n  useState,\n  useCallback,\n} from \"react\";\nimport \"./sortNav.css\";\n\ntype Props = {\n  children?: ReactNode;\n  navItems: { id: number; name: string }[];\n  curItem?: (id: number) => void;\n  curItemId?: number;\n};\nconst SortNav: FC<Props> = (props) => {\n  // console.log('题目导航组件');\n  const { navItems = [], curItem, curItemId } = props,\n    liDom = useRef<HTMLLIElement>(null!),\n    [curId, setCurId] = useState<number>(curItemId),\n    handleItemClick = useCallback((event: MouseEvent<HTMLLIElement>): void => {\n      const curId = Number(event.currentTarget.dataset.id || 0);\n      setCurId(curId);\n      curItem(curId);\n    }, []);\n  return (\n    <ul className=\"sort-nav-box layout-container\">\n      {navItems.map((item) => (\n        <li\n          ref={liDom}\n          className={`${curId === item.id ? \"item-act\" : \"\"}`}\n          onClick={handleItemClick}\n          key={item.id}\n          data-id={item.id}\n        >\n          {item.name}\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default React.memo(SortNav);\n","export interface QuesListParams {\n  uid: number;\n  condition: {\n    biz_type: number;\n    tech_tag?: string[];\n  };\n  page: number;\n  page_count: number;\n}\n\nexport interface QuesParams {\n  curNav: number;\n  curQuesIndex: number;\n  curQid?: number;\n  totalPage: number;\n  quesList: any[];\n}\n\nexport const initQuesListParams = (): QuesListParams => ({\n  uid: 0,\n  condition: {\n    biz_type: 2,\n  },\n  page: 1,\n  page_count: 15,\n});\nexport const initQuesParams = (): QuesParams => ({\n  curNav: 1,\n  curQuesIndex: -1,\n  totalPage: 1,\n  quesList: [],\n});\n","import React, {\n  FC,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n  Suspense,\n} from \"react\";\nimport \"./quesBank.css\";\nimport { useHistory } from \"react-router-dom\";\n// markdown 显示\nimport MarkRender from \"@components/MarkRender/markRender\";\n// 分页\nimport Pagination from \"@components/Pagination/pagination\";\n// 分类导航\nimport SortNav from \"@components/SortNav/sortNav\";\n\nimport { ques } from \"@api/index\";\nimport Loading from \"@components/Loading/Loading\";\n// 自定义 hooks 检查是否登录有效\nimport { useLoginCheck } from \"@hooks/index\";\nimport { loginSel } from \"@recoil/selectors/loginSelectors\";\n// 错误提示弹窗\nimport Totast from \"@components/Totast/totast\";\n// recoil 状态\nimport {\n  quesListSelect,\n  quesSelect,\n} from \"@recoil/selectors/quesListSelectors\";\n\nimport { useRecoilState, useRecoilValue } from \"recoil\";\n// 简单的工具函数\nimport { scrollToAnchor } from \"@utils/index\";\n\nconst QuesBank: FC<{}> = () => {\n  // console.log(\"面试题列表\");\n  const history = useHistory();\n  const { setLoginStatus } = useLoginCheck();\n\n  const { uid } = useRecoilValue(loginSel);\n\n  const [listLoading, setListLoading] = useState(true);\n  const [sortLoading, setSortLoading] = useState(true);\n\n  const [quesListParam, setQuesListParam] = useRecoilState(quesListSelect);\n  const quesListParams = useRef(quesListParam);\n  // useRef变化不会主动使页面渲染\n  // useRef接收initialValue作为初始值，它的返回值是一个ref对象，这个对象的.current属性就是该数据的最新值。使用useRef的一个最简单的情况就是在Function Component里面存储对DOM对象的引用，\n  // 它可以保证在组件每次渲染的时候拿到的都是同一个对象。\n  // useRef返回的ref object被重新赋值的时候不会引起组件的重渲染，如果你有这个需求的话请使用useState来存储数据。\n  // useRef保存任何可变化的值，.current属性总是取最新的值。就是相当于全局作用域，一处被修改，其他地方全更新...\n  quesListParams.current = quesListParam;\n\n  const [num, setNum] = useState(0);\n\n  const [quesParam, setQuesParam] = useRecoilState(quesSelect);\n  const quesParams = useRef(quesParam);\n  quesParams.current = quesParam;\n\n  const [quesList, setQuesList] = useState([]);\n  const [pageCount, setPageCount] = useState(0);\n\n  const totalPage = useRef(pageCount);\n  totalPage.current = pageCount;\n\n  const [navItems, setNavItems] = useState([]);\n  const navItemsArr = useRef(navItems);\n  navItemsArr.current = navItems;\n\n  let _componentStatus = useRef(true);\n\n  const [isError, setIsError] = useState(false);\n  useEffect(() => {\n    return () => {\n      _componentStatus.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    document.querySelector(\".page-ques\").scrollTo(0, 0);\n  }, [quesParam.curNav, quesListParam.page]);\n\n  // 请求导航分类\n  useEffect(() => {\n    setSortLoading(true);\n    ques\n      .getQuesSort({ uid })\n      .then((res) => {\n        if (!_componentStatus.current) {\n          _componentStatus = null;\n          return;\n        }\n        setLoginStatus(res.status);\n\n        const navArr = res.data || [];\n        setNavItems(navArr);\n        setSortLoading(false);\n      })\n      .catch((err) => {\n        setSortLoading(false);\n        setIsError(true);\n      });\n  }, []);\n\n  // 请求题目列表\n  useEffect(() => {\n    setListLoading(true);\n    const { page, page_count } = quesListParam;\n    const { curQuesIndex, quesList, curQid } = quesParam;\n    ques\n      .getQuesList({ ...quesListParam, ...{ uid } })\n      .then((res) => {\n        if (!_componentStatus.current) {\n          _componentStatus = null;\n          return;\n        }\n        setLoginStatus(res.status);\n        const { list = [], pages } = res.data || {};\n        setQuesList(list);\n        setPageCount(pages);\n        setListLoading(false);\n        setQuesParam({\n          ...quesParam,\n          quesList: list,\n          totalPage: pages * page_count,\n        });\n        setTimeout(() => {\n          curQid >= 0 && scrollToAnchor(curQid);\n        }, 100);\n      })\n      .catch((err) => {\n        setQuesList([]);\n        setListLoading(false);\n        setIsError(true);\n      });\n  }, [quesListParam]);\n\n  const setPageParam = useCallback((page: number) => {\n    setQuesListParam({\n      ...quesListParams.current,\n      page,\n    });\n  }, []);\n\n  const goPraticeInfo = useCallback((id: number, index: number) => {\n    setQuesParam({\n      ...quesParams.current,\n      curQuesIndex: index,\n      totalPage: totalPage.current * 15,\n      curQid: id,\n    });\n    setTimeout(() => {\n      history.push({ pathname: `/ques/info`, state: { qid: id } });\n    }, 0);\n  }, []);\n\n  const onPrev = useCallback((num: number) => {\n    setPageParam(num);\n  }, []);\n  const onNext = useCallback((num: number) => {\n    setPageParam(num);\n  }, []);\n  const onCurrent = useCallback((num: number) => {\n    setPageParam(num);\n  }, []);\n  const curItem = useCallback((id: number) => {\n    if (id === 1) {\n      setQuesListParam({\n        ...quesListParams.current,\n        condition: {\n          biz_type: 2,\n        },\n        page: 1,\n      });\n    } else {\n      let tagName = navItemsArr.current[id - 1].name;\n      setQuesListParam({\n        ...quesListParams.current,\n        condition: {\n          biz_type: 1,\n          tech_tag: [tagName],\n        },\n        page: 1,\n      });\n    }\n    setQuesParam({\n      ...quesParams.current,\n      curNav: id,\n      quesList: [],\n    });\n  }, []);\n  return (\n    <>\n      <Suspense fallback={Loading}>\n        <SortNav\n          navItems={navItems}\n          curItemId={quesParam.curNav}\n          curItem={curItem}\n        />\n        <div className='page-ques layout-container'>\n          <div className='ques-bank'>\n            {quesList.map((item, index) => (\n              <div\n                className='ques-item'\n                key={item.qid}\n                id={item.qid}\n                onClick={() => {\n                  goPraticeInfo(item.qid, index);\n                }}\n              >\n                <div className='item-icon'>\n                  <i style={{ backgroundColor: \"#ff5f56\" }}></i>\n                  <i style={{ backgroundColor: \"#ffbd2e\" }}></i>\n                  <i style={{ backgroundColor: \"#27c93f\" }}></i>\n                </div>\n                <div className='ques-con'>\n                  <p className='item-til'>{item[item.qtype].title}</p>\n                  {item[item.qtype].subject ? (\n                    <MarkRender\n                      mardownStr={item[item.qtype].subject}\n                      showTopic={false}\n                      setHeight={false}\n                    />\n                  ) : null}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n        <Pagination\n          totalPage={pageCount}\n          onPrev={onPrev}\n          onNext={onNext}\n          onCurrent={onCurrent}\n          curPage={quesListParam.page}\n          isShow={!sortLoading}\n        />\n\n        {listLoading ? <Loading /> : null}\n      </Suspense>\n      <Totast visible={isError}></Totast>\n    </>\n  );\n};\nexport default QuesBank;\n","import { atom } from \"recoil\";\nimport { initQuesListParams, initQuesParams } from \"@models/ques\";\n\nexport const quesListState = atom({\n  key: \"QuesListParams\",\n  default: initQuesListParams(),\n});\nexport const quesState = atom({\n  key: \"QuesParams\",\n  default: initQuesParams(),\n});\n","import { selector } from \"recoil\";\nimport { quesListState, quesState } from \"../atoms/quesAtoms\";\nimport {\n  initQuesListParams,\n  QuesListParams,\n  initQuesParams,\n  QuesParams,\n} from \"@models/ques\";\nimport { storage } from \"@utils/index\";\n\nexport const quesListSelect = selector({\n  key: \"quesListSel\",\n  get: ({ get }) => {\n    let quesListParam = get(quesListState);\n    if (quesListParam.uid === 0) {\n      try {\n        quesListParam = storage.get(\"quesListParam\") || quesListParam;\n      } catch (error) {\n        quesListParam = quesListParam;\n      }\n    }\n    return quesListParam;\n  },\n  set: ({ set }, newVal: QuesListParams) => {\n    set(quesListState, newVal);\n    storage.set(\"quesListParam\", newVal);\n  },\n});\nexport const quesSelect = selector({\n  key: \"quesSel\",\n  get: ({ get }) => {\n    let quesParam = get(quesState);\n    if (quesParam.curQuesIndex === -1) {\n      try {\n        quesParam = storage.get(\"quesParam\") || quesParam;\n      } catch (error) {\n        quesParam = quesParam;\n      }\n    }\n    return quesParam;\n  },\n  set: ({ set }, newVal: QuesParams) => {\n    set(quesState, newVal);\n    storage.set(\"quesParam\", newVal);\n  },\n});\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};"],"sourceRoot":""}